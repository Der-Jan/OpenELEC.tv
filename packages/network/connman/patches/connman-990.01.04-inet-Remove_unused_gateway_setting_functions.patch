
Betreff:
[PATCH 4/5] inet: Remove unused gateway setting functions
Von:
Jukka Rissanen <jukka.rissanen@linux.intel.com>
Datum:
25.06.2013 14:58
An:
connman@connman.net

No need for these functions any more as we are using the netlink
variants to set the default gateway.
---
 include/inet.h |  2 --
 src/inet.c     | 98 ----------------------------------------------------------
 2 files changed, 100 deletions(-)

diff --git a/include/inet.h b/include/inet.h
index 8f7a35c..10d9dae 100644
--- a/include/inet.h
+++ b/include/inet.h
@@ -50,7 +50,6 @@ int connman_inet_del_host_route(int index, const char *host);
 int connman_inet_add_network_route(int index, const char *host, const char *gateway,
 					const char *netmask);
 int connman_inet_del_network_route(int index, const char *host);
-int connman_inet_set_gateway_address(int index, const char *gateway);
 int connman_inet_clear_gateway_address(int index, const char *gateway);
 int connman_inet_set_gateway_interface(int index);
 int connman_inet_clear_gateway_interface(int index);
@@ -66,7 +65,6 @@ int connman_inet_add_ipv6_host_route(int index, const char *host,
 int connman_inet_del_ipv6_network_route(int index, const char *host,
 					unsigned char prefix_len);
 int connman_inet_del_ipv6_host_route(int index, const char *host);
-int connman_inet_set_ipv6_gateway_address(int index, const char *gateway);
 int connman_inet_clear_ipv6_gateway_address(int index, const char *gateway);
 int connman_inet_set_ipv6_gateway_interface(int index);
 int connman_inet_clear_ipv6_gateway_interface(int index);
diff --git a/src/inet.c b/src/inet.c
index ed98dd5..840f9b1 100644
--- a/src/inet.c
+++ b/src/inet.c
@@ -727,47 +727,6 @@ int connman_inet_add_ipv6_host_route(int index, const char *host,
 	return connman_inet_add_ipv6_network_route(index, host, gateway, 128);
 }
 
-int connman_inet_set_ipv6_gateway_address(int index, const char *gateway)
-{
-	struct in6_rtmsg rt;
-	int sk, err = 0;
-
-	DBG("index %d gateway %s", index, gateway);
-
-	if (gateway == NULL)
-		return -EINVAL;
-
-	memset(&rt, 0, sizeof(rt));
-
-	if (inet_pton(AF_INET6, gateway, &rt.rtmsg_gateway) < 0) {
-		err = -errno;
-		goto out;
-	}
-
-	rt.rtmsg_flags = RTF_UP | RTF_GATEWAY;
-	rt.rtmsg_metric = 1;
-	rt.rtmsg_dst_len = 0;
-	rt.rtmsg_ifindex = index;
-
-	sk = socket(AF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
-	if (sk < 0) {
-		err = -errno;
-		goto out;
-	}
-
-	if (ioctl(sk, SIOCADDRT, &rt) < 0 && errno != EEXIST)
-		err = -errno;
-
-	close(sk);
-
-out:
-	if (err < 0)
-		connman_error("Set default IPv6 gateway error (%s)",
-						strerror(-err));
-
-	return err;
-}
-
 int connman_inet_clear_ipv6_gateway_address(int index, const char *gateway)
 {
 	struct in6_rtmsg rt;
@@ -809,63 +768,6 @@ out:
 	return err;
 }
 
-int connman_inet_set_gateway_address(int index, const char *gateway)
-{
-	struct ifreq ifr;
-	struct rtentry rt;
-	struct sockaddr_in addr;
-	int sk, err = 0;
-
-	DBG("index %d gateway %s", index, gateway);
-
-	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
-	if (sk < 0) {
-		err = -errno;
-		goto out;
-	}
-
-	memset(&ifr, 0, sizeof(ifr));
-	ifr.ifr_ifindex = index;
-
-	if (ioctl(sk, SIOCGIFNAME, &ifr) < 0) {
-		err = -errno;
-		close(sk);
-		goto out;
-	}
-
-	DBG("ifname %s", ifr.ifr_name);
-
-	memset(&rt, 0, sizeof(rt));
-	rt.rt_flags = RTF_UP | RTF_GATEWAY;
-
-	memset(&addr, 0, sizeof(addr));
-	addr.sin_family = AF_INET;
-	addr.sin_addr.s_addr = INADDR_ANY;
-	memcpy(&rt.rt_dst, &addr, sizeof(rt.rt_dst));
-
-	memset(&addr, 0, sizeof(addr));
-	addr.sin_family = AF_INET;
-	addr.sin_addr.s_addr = inet_addr(gateway);
-	memcpy(&rt.rt_gateway, &addr, sizeof(rt.rt_gateway));
-
-	memset(&addr, 0, sizeof(addr));
-	addr.sin_family = AF_INET;
-	addr.sin_addr.s_addr = INADDR_ANY;
-	memcpy(&rt.rt_genmask, &addr, sizeof(rt.rt_genmask));
-
-	if (ioctl(sk, SIOCADDRT, &rt) < 0 && errno != EEXIST)
-		err = -errno;
-
-	close(sk);
-
-out:
-	if (err < 0)
-		connman_error("Setting default gateway route failed (%s)",
-							strerror(-err));
-
-	return err;
-}
-
 int connman_inet_set_gateway_interface(int index)
 {
 	struct ifreq ifr;
--
1.7.11.7

