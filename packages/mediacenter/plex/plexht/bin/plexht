#!/bin/sh

#      Copyright (C) 2008-2010 Team XBMC
#      http://www.xbmc.org
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with XBMC; see the file COPYING.  If not, write to
#  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#  http://www.gnu.org/copyleft/gpl.html

SAVED_ARGS="$@"
LIBDIR="/usr/share/xbmc"

single_stacktrace()
{
  # core filename is either "core.$PID" or "core"
  find /storage -name 'core*' | while read core; do
      LC_ALL=C gdb --core="$core" --batch 2> /dev/null | grep -q "^Core was generated by \`$XBMC_BIN" || continue
      echo "=====>  Core file: "$core" ($(stat -c%y "$core"))" >> $FILE
      echo "        =========================================" >> $FILE
      gdb "$XBMC_BIN" --core="$core" --batch -ex "thread apply all bt" 2> /dev/null >> $FILE
      rm -f "$core"
  done
}

print_crash_report()
{
  FILE="/storage/plex_crashlog-`date +%Y%m%d_%H%M%S`.log"
  echo "############## PLEX CRASH LOG ###############" >> $FILE
  echo >> $FILE
  echo "################ SYSTEM INFO ################" >> $FILE
  echo -n " Date: " >> $FILE
  date >> $FILE
  echo " Plex Options: $*" >> $FILE
  echo -n " Arch: " >> $FILE
  uname -m >> $FILE
  echo -n " Kernel: " >> $FILE
  uname -rvs >> $FILE
  echo -n " Release: " >> $FILE
  if which lsb_release > /dev/null; then
    echo >> $FILE
    lsb_release -a 2> /dev/null | sed -e 's/^/    /' >> $FILE
  else
    echo "lsb_release not available" >> $FILE
  fi
  echo "############## END SYSTEM INFO ##############" >> $FILE
  echo >> $FILE
  echo "############### STACK TRACE #################" >> $FILE
  if which gdb >/dev/null 2>&1; then
    single_stacktrace "$PWD" 1
    single_stacktrace /storage 1
    # Find in plugins directories
    if [ $XBMC_HOME ]; then
      BASEDIR=$XBMC_HOME
    else
      BASEDIR="$LIBDIR/xbmc/"
    fi
    single_stacktrace "$BASEDIR" 5
    # find in user xbmc dir
    single_stacktrace $HOME/.plexht/ 5
  else
    echo "gdb not installed, can't get stack trace." >> $FILE
  fi
  echo "############# END STACK TRACE ###############" >> $FILE
  echo >> $FILE
  echo "################# LOG FILE ##################" >> $FILE
  echo >> $FILE
  if [ -f ~/.plexht/temp/plexhometheater.old.log ]
  then
    cat ~/.plexht/temp/plexhometheater.old.log >> $FILE
    echo >> $FILE
  else
    echo "Logfile not found in the usual place." >> $FILE
    echo "Please attach it seperately." >> $FILE
    echo "Use pastebin.com or similar for forums or IRC." >> $FILE
  fi
  echo >> $FILE
  echo "############### END LOG FILE ################" >> $FILE
  echo >> $FILE
  echo "############ END plex CRASH LOG #############" >> $FILE
  echo "Crash report available at $FILE"
}

RET=$?
if [ $RET -ne 0 ]; then
  exit $RET
fi

if which gdb >/dev/null 2>&1; then
  # Output warning in case ulimit is unsupported by shell
  eval ulimit -c unlimited
  if [ ! $? = "0" ]; then
    echo ": ulimit is unsupported by this shell" 1>&2
  fi
fi

LOOP=0
ulimit -c unlimited
echo -n 1 | /bin/tee /proc/sys/fs/suid_dumpable
cd /storage
XBMC_HOME="$XBMC_HOME" "$XBMC_BIN" $XBMC_ARGS > /dev/null 2>&1
RET=$?
if [ $(( $RET == 65 )) = "1" ]
then # User requested to restart app
LOOP=1
elif [ $(( ($RET >= 131 && $RET <= 136) || $RET == 139 )) = "1" ]
then # Crashed with core dump
print_crash_report
fi

exit $RET
